#include<stdio.h>
#include<stdlib.h>
struct Process
{
 int pid; 
 int bt; 
 int priority; 
};
 typedef struct Process proc;
proc pro[30],temp;
int n=0;
 void insert()
 {
 int i=0,j=0;
printf("\nEnter the process id, burst time and priority of the queue\n ");
 scanf("%d %d %d", &temp.pid,&temp.bt,&temp.priority);
 while(temp.priority<pro[i].priority) 
 i++;
 for(j=n-1; j>=i; j--) 
 {
 pro[j+1] = pro[j];
 }
 pro[i] = temp;
 n = n+1;
 }
 void del() 
 {
 int i,elem,pid;
 for(i=0; i<=n+1; i++)
 {
printf("Deleted element is pid =%d\t\tburst time=%d\t\tpriority=%d\t\t\n", pro[i].pid,pro[i].bt,pro[i].priority);
 pro[i] = pro[i+1];
 n = n-1;
 }
 }
 void findWaitingTime(int wt[])
 {
 wt[0] = 0;
 for (int i = 1; i < n ; i++ )
 wt[i] = pro[i-1].bt + wt[i-1] ;
 }
 void findTurnAroundTime(int wt[], int tat[])
 {
 for (int i = 0; i < n ; i++)
 tat[i] = pro[i].bt + wt[i];
 }
 void display()
 {
 if(n==0)
 {
 printf("Priority Queue is empty\n");
 return;
 }
 int wt[n], tat[n], total_wt = 0, total_tat = 0;
 findWaitingTime( wt);
 findTurnAroundTime(wt, tat);
printf("\nProcesses Burst time Waiting time Turn around time\n");
 for (int i=0; i<n; i++)
 {
 total_wt = total_wt + wt[i];
 total_tat = total_tat + tat[i];
printf(" %d\t\t%d\t\t%d\t\t%d\n",
pro[i].pid,pro[i].bt,wt[i],tat[i]);
 }
printf("\n Average waiting time=%f\n Average turnaround time=%f", (float)total_wt/(float)n,(float)total_tat / (float)n);
}
 void main()
 {
 int ch;
 do{
 printf("\n\n--------Menu-----------\n");
 printf("1Insert\n 2.Display 3.Delete\n 5.Exit\n");
 printf("-------------------------------");
 printf("\nEnter your choice: ");
 scanf("%d", &ch);
 switch(ch)
 {
 case 1: insert();
 break;
 case 2: display();
 break;
 case 3: del();
 break;
 case 4: exit(0);
 break;
 default: printf("\nInvalid choice:\n");
 break;
 }
 }while(ch!=5);
 }
